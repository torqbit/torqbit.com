import clsx from "clsx"
import useDocusaurusContext from "@docusaurus/useDocusaurusContext"
import React, { ComponentProps, useCallback, useState, useEffect } from "react"
import BrowserOnly from "@docusaurus/BrowserOnly"

// import Button from "@theme/Button"
import useLockBodyScroll from "@theme/hooks/useLockBodyScroll"
import useWindowSize, { windowSizes } from "@theme/hooks/useWindowSize"
import styles from "./styles.module.css"
import NavbarItem from "@theme/NavbarItem"
import { Link } from "@docusaurus/router"
// import ButtonDropdown from "../Button/ButtonDropdown"

const DefaultNavItemPosition = "right"

function splitNavItemsByPosition(
  items: Array<ComponentProps<typeof NavbarItem>>,
): {
  leftItems: Array<ComponentProps<typeof NavbarItem>>
  rightItems: Array<ComponentProps<typeof NavbarItem>>
} {
  const leftItems = items.filter(
    (item) =>
      // @ts-expect-error: temporary, will be fixed in Docusaurus TODO remove soon
      (item.position ?? DefaultNavItemPosition) === "left",
  )
  const rightItems = items.filter(
    (item) =>
      // @ts-expect-error: temporary, will be fixed in Docusaurus TODO remove soon
      (item.position ?? DefaultNavItemPosition) === "right",
  )
  return {
    leftItems,
    rightItems,
  }
}

function Navbar(): JSX.Element {
  const {
    siteConfig: {
      themeConfig: {
        navbar: { items },
      },
    },
  } = useDocusaurusContext()
  const [sidebarShown, setSidebarShown] = useState(false)
  const [colorChange, setColorchange] = useState(false)

  useLockBodyScroll(sidebarShown)

  const showSidebar = useCallback(() => {
    setSidebarShown(true)
  }, [])
  const hideSidebar = useCallback(() => {
    setSidebarShown(false)
  }, [])

  const windowSize = useWindowSize()

  useEffect(() => {
    if (windowSize === windowSizes.desktop) {
      setSidebarShown(false)
    }
  }, [windowSize])

  const { leftItems, rightItems } = splitNavItemsByPosition(items)

  return (
    <BrowserOnly>
      {() => {
        const changeNavbarColor = () => {
          if (window.scrollY >= 100) {
            setColorchange(true)
          } else {
            setColorchange(false)
          }
        }
        window.addEventListener("scroll", changeNavbarColor)
        return (
          <nav
            className={clsx("navbar", "navbar--light", "navbar--fixed-top", {
              "navbar-sidebar--show": sidebarShown,
              "bg-white": colorChange,
            })}
          >
            <div className={clsx("navbar__inner", styles.inner)}>
              <div className="navbar__items">
                <div
                  aria-label="Navigation bar toggle"
                  className="navbar__toggle"
                  role="button"
                  tabIndex={0}
                  onClick={showSidebar}
                  onKeyDown={showSidebar}
                >
                  <svg
    xmlns="http://www.w3.org/2000/svg"
    xmlSpace="preserve"
    width={10272}
    height={2880}
   
    viewBox="0 0 271780 76200"
  >
    <defs>
      <style>{".fil0{fill:#fff}"}</style>
    </defs>
    <g id="Layer_x0020_1">
      <g id="_2303546435616">
        <path
          className="fil0"
          d="M74687.73 54378.47c-1497.78-2675.79-2246.66-6664.23-2246.66-11956.91 0-5477.8 748.88-9600.87 2246.66-12377.64 1489.35-2768.35 3719.18-4156.73 6681.05-4156.73 2970.3 0 5208.54 1388.38 6697.9 4156.73 1497.76 2776.77 2246.66 6899.84 2246.66 12377.64 0 5292.68-748.9 9281.12-2246.66 11956.91-1489.36 2684.2-3727.6 4022.1-6697.9 4022.1-2961.87 0-5191.7-1337.9-6681.05-4022.1zm19555.14 757.3c3340.53-3281.63 5006.59-7514.1 5006.59-12688.97 0-5343.17-1666.06-9718.68-5006.59-13118.11-3340.53-3407.85-7631.89-5107.56-12874.09-5107.56-5233.77 0-9516.72 1699.71-12857.25 5107.56-3340.54 3399.43-5006.59 7774.94-5006.59 13118.11 0 5174.87 1666.05 9407.34 5006.59 12688.97 3340.53 3290.05 7623.48 4930.86 12857.25 4930.86 5242.2 0 9533.56-1640.81 12874.09-4930.86zM113301.32 42881.11c8245.87-45.7 6033.68 2347.14 8503.15 12312.41 1844.59 7444.28 12095.76 4683.85 13000.05 1525.43-1521.13-764.15-747.96 200.04-2274.16 588.88-2503.04 637.87-2881.76-4554.37-3590.75-7679.99-1150.67-5072.58-3302.08-5979.96-8413.2-7029.34 4308.33-1127.01 7005.35-1915.59 8753.6-5113.98 2196.44-4018.45 976.08-8125.2-1807.91-10228.28-4819.71-3640.73-18131.53-2409.23-24978.24-2559.95-796.18 99.52-1073.39 515.22-432.77 1055.45 609.35 513.79 1960.95-209.62 2846.96 1143.3 668.81 1021.09 455.01 3300.99 454.58 4685.28-1.11 3089.49 386.86 23813.35-355.82 25223.29-1003.81 1905.68-3061.53 203.56-3256.73 2026.01 445.1 353.95 1056.33 348.11 1636.62 339.75l9774.37-41.51c1413.36 11.46 3714.6 376.96 3763.15-525.35 62.53-1161.69-2250.82-237.91-3152.8-1740.22-831.52-1385.17-459.41-11982.37-470.1-13981.18zm8286.16-5165.29c-1253.07 4280.91-5120.91 3967.26-8283.51 4022.97 4.95-4027.7-180.22-8470.88 11.01-12445.19 107.89-2240.91 318.82-3421.65 2790.59-3456.43 1991.57-28.07 3293.51 611 4315.49 1657.21 2027.22 2075.55 2062.46 7160.35 1166.42 10221.44zM137657.18 38008.12c-1351.38 7827.18 696.88 15369.77 7109.82 19362.46 2449.53 1525.1 3861.46 1575.53 6730.01 2341.98-965.73 809.72-4319.45 2126.63-5833.75 1801.65-1792.4-384.67-6025.64-1309.43-5459.23 1587.63 1235.13 1110.16 3188.15 862.78 4936.62 292.95 2445.58-796.95 2474.53-181.32 4733.5 674.31 2946.82 1116.22 5701.53 2630.63 8923.58 3563.77 7181.5 2079.97 14208.52-312.77 14455.13-8974.88-2000.8-423.96-1044.99 1036.84-4014.82 2717.94-4380.76 2479.93-15016.82 1168.84-19933.51 718.35 1242.71-1067.01 5305.43-2113.43 6781.43-2297.83 7170.59-895.49 12678.36-4425.9 14883.49-12147.07 2668.07-9341.92-672-20600.22-11547.06-23114.93-11408.02-2638.01-20122.76 3960.55-21765.21 13473.67zm18202.98 20663.96c-12419.98 2593.76-14294.73-31089.85-2433.91-33458.69 3728.92-744.77 6357.46 2492.25 7597.97 4769.71 1552.51 2850.28 2321.72 6681.68 2469.8 10445.05 281.61 7158.48-1609.54 16985.7-7633.86 18243.93zM180152.72 30111.24v23863.33c0 1497.78-277.68 2482.26-841.44 2961.89-555.35 488.03-1758.61 790.96-3601.38 908.76v1262.16h16812.05c4089.41 0 7387.86-900.34 9886.95-2701.03 2499.09-1800.69 3744.43-4173.57 3744.43-7118.62 0-2844.07-1430.46-5065.48-4282.95-6664.22-1590.32-908.76-3534.06-1556.68-5814.38-1952.16 1859.59-361.81 3407.85-900.34 4661.61-1623.99 2482.25-1430.44 3719.18-3525.65 3719.18-6285.57 0-2541.17-1093.88-4476.48-3290.05-5797.55-2187.76-1321.07-5402.07-1985.81-9617.7-1985.81H175709.9v1262.17c1842.77 117.8 3046.03 412.3 3601.38 900.34 563.76 488.04 841.44 1472.52 841.44 2970.3zm8178.83 10164.63V29076.26c0-950.83 185.12-1615.58 563.77-1994.22 395.48-395.47 1060.22-589.01 2011.05-589.01 1800.69 0 3121.75 530.11 3971.62 1598.75 849.86 1068.63 1278.99 2743.1 1278.99 5023.41 0 2608.47-521.7 4451.24-1573.5 5536.7-1043.39 1085.46-2827.25 1623.98-5343.17 1623.98h-908.76zm0 14228.82V41790.48h807.79c2802.01 0 4880.37 614.25 6243.51 1851.17 1354.73 1236.92 2036.29 3130.17 2036.29 5679.74 0 2743.11-479.62 4787.82-1438.86 6117.29-959.25 1337.9-2423.36 2002.64-4409.16 2002.64h-319.75c-1009.74 0-1750.21-235.6-2221.42-706.81-462.79-462.8-698.4-1211.68-698.4-2229.82zM213305.63 30111.24v23863.33c0 1480.95-294.51 2465.44-883.51 2961.89-605.85 488.03-1876.43 790.96-3811.75 908.76v1262.16h17569.35v-1262.16c-1935.32-117.8-3197.49-420.73-3794.91-908.76-597.43-496.45-900.35-1480.94-900.35-2961.89V30111.24c0-1480.95 302.92-2465.43 900.35-2961.89 597.42-488.03 1859.59-790.95 3794.91-908.75v-1262.17h-17569.35v1262.17c1935.32 117.8 3197.49 420.72 3794.92 908.75 597.42 496.46 900.34 1480.94 900.34 2961.89zM239844.79 26543.52v27431.05c0 1464.11-311.33 2440.19-934 2936.64-622.66 488.04-1960.56 799.38-4013.68 934.01v1262.16h18074.2v-1262.16c-2053.12-134.63-3391.02-445.97-4013.68-934.01-622.67-496.45-934-1472.53-934-2936.64V26543.52h210.35c3003.96 0 5225.37 656.33 6664.24 1968.97 1430.46 1312.65 2339.22 3500.41 2717.87 6563.26h1615.57l-100.98-5065.48-50.48-5031.84h-30291.98l-50.48 5057.07-100.97 5040.25h1615.56c378.65-3062.85 1287.41-5250.61 2717.87-6563.26 1438.87-1312.64 3660.28-1968.97 6664.24-1968.97h210.35zM45630.88 58923.25l-15.21-36361.84c6185.73-161.51 5906.22 762.93 7754.99-1507.95 1051.69-1291.87 3798.54-3890.95 4384.74-5134.48l-12792.38-83.86 1.08-1281.96 14645.95-32.57c826.04-785.48 5500.34-5949.38 5762.5-6648.86l-52824.21-8.9 5448.27 6658.21 13154.23 7.33v1278.81l-11500.56 97.37c490.3 933.91 1919.11 2528.54 2646.88 3368.79 552.5 637.93 917.11 1086.74 1397.6 1624.48 1870.31 2092.68-255.63 1621.21 7406.94 1627.63l91.52 36384.62 6600.62 5177.2 9.92-41551.78 1163.73 2.5 3.6 41466.1c1403.24-601.19 5123.68-4226.27 6659.79-5080.84zM38059.23 9751.09c1507.77 0 2872.85 611.2 3861.01 1599.35 988.14 988.15 1599.35 2353.26 1599.35 3861.02 0 1507.77-611.21 2872.86-1599.35 3861.01-988.16 988.15-2353.24 1599.35-3861.01 1599.35-1507.77 0-2872.87-611.21-3861.02-1599.35-988.14-988.15-1599.35-2353.24-1599.35-3861.01 0-1507.76 611.21-2872.87 1599.35-3861.02 988.15-988.14 2353.24-1599.35 3861.02-1599.35zm2950.31 2510.05c-755.01-755-1798.11-1221.99-2950.31-1221.99-1152.21 0-2195.31 466.99-2950.32 1221.99-755 755.01-1221.99 1798.11-1221.99 2950.32 0 1152.2 466.99 2195.3 1221.99 2950.31 755.01 755 1798.12 1221.99 2950.32 1221.99 1152.2 0 2195.3-466.99 2950.31-1221.99 755-755.01 1221.99-1798.11 1221.99-2950.31 0-1152.21-466.99-2195.31-1221.99-2950.32zm-2950.31 597.47c1299.43 0 2352.84 1053.41 2352.84 2352.85 0 1299.43-1053.41 2352.84-2352.84 2352.84-1299.44 0-2352.85-1053.41-2352.85-2352.84 0-1299.44 1053.41-2352.85 2352.85-2352.85z"
        />
      </g>
    </g>
  </svg>
                </div>
                <Link className={clsx("navbar__brand", styles.brand)} to="/">
                  Torqbit
                </Link>

               
                {/* <span className={styles.indexCtasGitHubButtonWrapper}>
                  <iframe
                    className={styles.indexCtasGitHubButton}
                    src="https://ghbtns.com/github-btn.html?user=gigahexhq&amp;repo=console&amp;type=star&amp;count=true&amp;size=large"
                    width={140}
                    height={30}
                    title="GitHub Stars"
                  />
                </span> */}
                {leftItems.map((item, i) => (
                  <NavbarItem {...item} key={i} />
                ))}
              </div>
              <div className="navbar__items navbar__items--right">
                {rightItems.map((item, i) => (
                  <NavbarItem {...item} key={i} />
                ))}
              </div>
            </div>
            <div
              role="presentation"
              className="navbar-sidebar__backdrop"
              onClick={hideSidebar}
            />
            <div className="navbar-sidebar">
              <div className="navbar-sidebar__brand">
                <a
                  className={clsx("navbar__brand", styles.brand)}
                  href="/"
                  onClick={hideSidebar}
                >
                  Heapland
                </a>
              </div>
              <div className="navbar-sidebar__items">
                <div className="menu document-menu">
                  <ul className="menu__list">
                    {items.map((item, i) => (
                      <NavbarItem
                        mobile
                        {...item}
                        {...(item.type !== "search" && {
                          onClick: hideSidebar,
                        })} // Search type def does not accept onClick
                        key={i}
                      />
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          </nav>
        )
      }}
    </BrowserOnly>
  )
}

export default Navbar
